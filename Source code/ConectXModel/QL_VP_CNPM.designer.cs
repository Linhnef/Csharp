#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConectXModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TrafficManagement")]
	public partial class QL_VP_CNPMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertvehicle_X_mistake(vehicle_X_mistake instance);
    partial void Updatevehicle_X_mistake(vehicle_X_mistake instance);
    partial void Deletevehicle_X_mistake(vehicle_X_mistake instance);
    partial void InsertAdmin_data(Admin_data instance);
    partial void UpdateAdmin_data(Admin_data instance);
    partial void DeleteAdmin_data(Admin_data instance);
    partial void Inserthistory(history instance);
    partial void Updatehistory(history instance);
    partial void Deletehistory(history instance);
    partial void InsertInformation(Information instance);
    partial void UpdateInformation(Information instance);
    partial void DeleteInformation(Information instance);
    partial void Insertrequest(request instance);
    partial void Updaterequest(request instance);
    partial void Deleterequest(request instance);
    partial void Inserttype_of_mistake(type_of_mistake instance);
    partial void Updatetype_of_mistake(type_of_mistake instance);
    partial void Deletetype_of_mistake(type_of_mistake instance);
    partial void Insertuser_status(user_status instance);
    partial void Updateuser_status(user_status instance);
    partial void Deleteuser_status(user_status instance);
    partial void Insertvehicle(vehicle instance);
    partial void Updatevehicle(vehicle instance);
    partial void Deletevehicle(vehicle instance);
    partial void Insertvehicle_X_infor(vehicle_X_infor instance);
    partial void Updatevehicle_X_infor(vehicle_X_infor instance);
    partial void Deletevehicle_X_infor(vehicle_X_infor instance);
    #endregion
		
		public QL_VP_CNPMDataContext() : 
				base(global::ConectXModel.Properties.Settings.Default.TrafficManagementConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_VP_CNPMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_VP_CNPMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_VP_CNPMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_VP_CNPMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vehicle_X_mistake> vehicle_X_mistakes
		{
			get
			{
				return this.GetTable<vehicle_X_mistake>();
			}
		}
		
		public System.Data.Linq.Table<Admin_data> Admin_datas
		{
			get
			{
				return this.GetTable<Admin_data>();
			}
		}
		
		public System.Data.Linq.Table<history> histories
		{
			get
			{
				return this.GetTable<history>();
			}
		}
		
		public System.Data.Linq.Table<Information> Informations
		{
			get
			{
				return this.GetTable<Information>();
			}
		}
		
		public System.Data.Linq.Table<request> requests
		{
			get
			{
				return this.GetTable<request>();
			}
		}
		
		public System.Data.Linq.Table<type_of_mistake> type_of_mistakes
		{
			get
			{
				return this.GetTable<type_of_mistake>();
			}
		}
		
		public System.Data.Linq.Table<user_status> user_status
		{
			get
			{
				return this.GetTable<user_status>();
			}
		}
		
		public System.Data.Linq.Table<vehicle> vehicles
		{
			get
			{
				return this.GetTable<vehicle>();
			}
		}
		
		public System.Data.Linq.Table<vehicle_X_infor> vehicle_X_infors
		{
			get
			{
				return this.GetTable<vehicle_X_infor>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_AdminTable")]
		public ISingleResult<USP_AdminTableResult> USP_AdminTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_AdminTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_vehicleTable")]
		public ISingleResult<USP_vehicleTableResult> USP_vehicleTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_vehicleTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteAdmin")]
		public int USP_deleteAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_admin", DbType="Int")] System.Nullable<int> iD_admin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD_admin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteAllHistory")]
		public int USP_deleteAllHistory()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteHistory")]
		public int USP_deleteHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> admin_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), admin_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteRequest")]
		public int USP_deleteRequest([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_card", DbType="VarChar(20)")] string iD_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD_card);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteTOM")]
		public int USP_deleteTOM([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistake_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mistake_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteUserSTT")]
		public int USP_deleteUserSTT([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_card", DbType="VarChar(20)")] string iD_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD_card);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteVehicle")]
		public int USP_deleteVehicle([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteVehicleInfor")]
		public int USP_deleteVehicleInfor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteVehicleInforByIdcard")]
		public int USP_deleteVehicleInforByIdcard([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_Card", DbType="VarChar(20)")] string iD_Card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD_Card);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteVehicleMistake")]
		public int USP_deleteVehicleMistake([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_DeleteVehicleMistakeByMistakeID")]
		public int USP_DeleteVehicleMistakeByMistakeID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistake_ID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mistake_ID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getAdmin")]
		public ISingleResult<USP_getAdminResult> USP_getAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<USP_getAdminResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getHistory")]
		public ISingleResult<USP_getHistoryResult> USP_getHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<USP_getHistoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getInformation")]
		public ISingleResult<USP_getInformationResult> USP_getInformation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card);
			return ((ISingleResult<USP_getInformationResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getMistakeSTT")]
		public ISingleResult<USP_getMistakeSTTResult> USP_getMistakeSTT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistake_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> time_)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id, mistake_id, time_);
			return ((ISingleResult<USP_getMistakeSTTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getRequest")]
		public ISingleResult<USP_getRequestResult> USP_getRequest([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card);
			return ((ISingleResult<USP_getRequestResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_GetSecretAnswer")]
		public ISingleResult<USP_GetSecretAnswerResult> USP_GetSecretAnswer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card);
			return ((ISingleResult<USP_GetSecretAnswerResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getToM")]
		public ISingleResult<USP_getToMResult> USP_getToM([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistake_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mistake_id);
			return ((ISingleResult<USP_getToMResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getUserSTT")]
		public ISingleResult<USP_getUserSTTResult> USP_getUserSTT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card);
			return ((ISingleResult<USP_getUserSTTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getvehicle")]
		public ISingleResult<USP_getvehicleResult> USP_getvehicle([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id);
			return ((ISingleResult<USP_getvehicleResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getVehicleinfor")]
		public ISingleResult<USP_getVehicleinforResult> USP_getVehicleinfor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id);
			return ((ISingleResult<USP_getVehicleinforResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_getVehicleMistake")]
		public ISingleResult<USP_getVehicleMistakeResult> USP_getVehicleMistake([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id);
			return ((ISingleResult<USP_getVehicleMistakeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_HistoryTable")]
		public ISingleResult<USP_HistoryTableResult> USP_HistoryTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_HistoryTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_InformationTable")]
		public ISingleResult<USP_InformationTableResult> USP_InformationTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_InformationTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_Admin_data")]
		public int USP_insert_Admin_data([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_Admin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string use_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(32)")] string pass)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_Admin, use_name, pass);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_history")]
		public int USP_insert_history([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_admin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string activity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_admin, activity);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_information")]
		public int USP_insert_information([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_Card, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string fname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> dob, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string adr)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_Card, fname, name, dob, adr);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_Request")]
		public int USP_insert_Request([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string complain, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string request, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string reply)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card, complain, request, reply);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_ToM")]
		public int USP_insert_ToM([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistaks_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string content, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string descride, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> charge)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mistaks_id, content, descride, charge);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_UserSTT")]
		public int USP_insert_UserSTT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_Car, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> stt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string use_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(32)")] string pass, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string secret_answer)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_Car, stt, use_name, pass, secret_answer);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_vehicle")]
		public int USP_insert_vehicle([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string frame_number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string machine_number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string brand, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string origin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id, frame_number, machine_number, brand, origin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_vehicle_infor")]
		public int USP_insert_vehicle_infor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_Card, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_Card, vehicle_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_insert_vehicle_mistake")]
		public int USP_insert_vehicle_mistake([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistake_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string descride_mistake, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> stt, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> time_)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id, mistake_id, descride_mistake, stt, time_);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_RequestTable")]
		public ISingleResult<USP_RequestTableResult> USP_RequestTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_RequestTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_ToMTable")]
		public ISingleResult<USP_ToMTableResult> USP_ToMTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_ToMTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateAdmin")]
		public int USP_UpdateAdmin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string prop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_admin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prop, id_admin, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateCharge")]
		public int USP_UpdateCharge([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_mistake, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_mistake, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateFinesSTT")]
		public int USP_UpdateFinesSTT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> mistake_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> stt)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicle_id, mistake_id, stt);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateMistake")]
		public int USP_UpdateMistake([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_mistake, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string prop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_mistake, prop, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdatePass")]
		public int USP_UpdatePass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(32)")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateReply")]
		public int USP_UpdateReply([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateSecretAnswer")]
		public int USP_UpdateSecretAnswer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string id_card, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_card, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_Updatevehicle")]
		public int USP_Updatevehicle([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string prop, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string vehicle_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), prop, vehicle_ID, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UserSTT")]
		public ISingleResult<USP_UserSTTResult> USP_UserSTT()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_UserSTTResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_VehicleInforTable")]
		public ISingleResult<USP_VehicleInforTableResult> USP_VehicleInforTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_VehicleInforTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_VehicleMistakeTable")]
		public ISingleResult<USP_VehicleMistakeTableResult> USP_VehicleMistakeTable()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<USP_VehicleMistakeTableResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_UpdateCharge")]
		public int USP_UpdateCharge1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_mistake, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Money")] System.Nullable<decimal> data)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_mistake, data);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.USP_deleteInformation")]
		public int USP_deleteInformation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID_card", DbType="VarChar(20)")] string iD_card)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD_card);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicle_X_mistake")]
	public partial class vehicle_X_mistake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _vehicle_ID;
		
		private int _mistake_ID;
		
		private string _descride_mistake;
		
		private System.Nullable<bool> _status_;
		
		private System.Nullable<System.DateTime> _time_;
		
		private EntityRef<type_of_mistake> _type_of_mistake;
		
		private EntityRef<vehicle> _vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onvehicle_IDChanging(string value);
    partial void Onvehicle_IDChanged();
    partial void Onmistake_IDChanging(int value);
    partial void Onmistake_IDChanged();
    partial void Ondescride_mistakeChanging(string value);
    partial void Ondescride_mistakeChanged();
    partial void Onstatus_Changing(System.Nullable<bool> value);
    partial void Onstatus_Changed();
    partial void Ontime_Changing(System.Nullable<System.DateTime> value);
    partial void Ontime_Changed();
    #endregion
		
		public vehicle_X_mistake()
		{
			this._type_of_mistake = default(EntityRef<type_of_mistake>);
			this._vehicle = default(EntityRef<vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					if (this._vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._vehicle_ID = value;
					this.SendPropertyChanged("vehicle_ID");
					this.Onvehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mistake_ID", DbType="Int NOT NULL")]
		public int mistake_ID
		{
			get
			{
				return this._mistake_ID;
			}
			set
			{
				if ((this._mistake_ID != value))
				{
					if (this._type_of_mistake.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmistake_IDChanging(value);
					this.SendPropertyChanging();
					this._mistake_ID = value;
					this.SendPropertyChanged("mistake_ID");
					this.Onmistake_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descride_mistake", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descride_mistake
		{
			get
			{
				return this._descride_mistake;
			}
			set
			{
				if ((this._descride_mistake != value))
				{
					this.Ondescride_mistakeChanging(value);
					this.SendPropertyChanging();
					this._descride_mistake = value;
					this.SendPropertyChanged("descride_mistake");
					this.Ondescride_mistakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit")]
		public System.Nullable<bool> status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_", DbType="Date")]
		public System.Nullable<System.DateTime> time_
		{
			get
			{
				return this._time_;
			}
			set
			{
				if ((this._time_ != value))
				{
					this.Ontime_Changing(value);
					this.SendPropertyChanging();
					this._time_ = value;
					this.SendPropertyChanged("time_");
					this.Ontime_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_of_mistake_vehicle_X_mistake", Storage="_type_of_mistake", ThisKey="mistake_ID", OtherKey="mistake_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public type_of_mistake type_of_mistake
		{
			get
			{
				return this._type_of_mistake.Entity;
			}
			set
			{
				type_of_mistake previousValue = this._type_of_mistake.Entity;
				if (((previousValue != value) 
							|| (this._type_of_mistake.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._type_of_mistake.Entity = null;
						previousValue.vehicle_X_mistakes.Remove(this);
					}
					this._type_of_mistake.Entity = value;
					if ((value != null))
					{
						value.vehicle_X_mistakes.Add(this);
						this._mistake_ID = value.mistake_ID;
					}
					else
					{
						this._mistake_ID = default(int);
					}
					this.SendPropertyChanged("type_of_mistake");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_vehicle_X_mistake", Storage="_vehicle", ThisKey="vehicle_ID", OtherKey="vehicle_ID", IsForeignKey=true)]
		public vehicle vehicle
		{
			get
			{
				return this._vehicle.Entity;
			}
			set
			{
				vehicle previousValue = this._vehicle.Entity;
				if (((previousValue != value) 
							|| (this._vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vehicle.Entity = null;
						previousValue.vehicle_X_mistakes.Remove(this);
					}
					this._vehicle.Entity = value;
					if ((value != null))
					{
						value.vehicle_X_mistakes.Add(this);
						this._vehicle_ID = value.vehicle_ID;
					}
					else
					{
						this._vehicle_ID = default(string);
					}
					this.SendPropertyChanged("vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin_data")]
	public partial class Admin_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_admin;
		
		private string _use_name;
		
		private string _pass;
		
		private EntitySet<history> _histories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_adminChanging(int value);
    partial void OnID_adminChanged();
    partial void Onuse_nameChanging(string value);
    partial void Onuse_nameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    #endregion
		
		public Admin_data()
		{
			this._histories = new EntitySet<history>(new Action<history>(this.attach_histories), new Action<history>(this.detach_histories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_admin", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_admin
		{
			get
			{
				return this._ID_admin;
			}
			set
			{
				if ((this._ID_admin != value))
				{
					this.OnID_adminChanging(value);
					this.SendPropertyChanging();
					this._ID_admin = value;
					this.SendPropertyChanged("ID_admin");
					this.OnID_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_use_name", DbType="VarChar(100)")]
		public string use_name
		{
			get
			{
				return this._use_name;
			}
			set
			{
				if ((this._use_name != value))
				{
					this.Onuse_nameChanging(value);
					this.SendPropertyChanging();
					this._use_name = value;
					this.SendPropertyChanged("use_name");
					this.Onuse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="Char(32)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_data_history", Storage="_histories", ThisKey="ID_admin", OtherKey="ID_admin")]
		public EntitySet<history> histories
		{
			get
			{
				return this._histories;
			}
			set
			{
				this._histories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.Admin_data = this;
		}
		
		private void detach_histories(history entity)
		{
			this.SendPropertyChanging();
			entity.Admin_data = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.history")]
	public partial class history : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _ID_admin;
		
		private string _activity;
		
		private EntityRef<Admin_data> _Admin_data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnID_adminChanging(System.Nullable<int> value);
    partial void OnID_adminChanged();
    partial void OnactivityChanging(string value);
    partial void OnactivityChanged();
    #endregion
		
		public history()
		{
			this._Admin_data = default(EntityRef<Admin_data>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_admin", DbType="Int")]
		public System.Nullable<int> ID_admin
		{
			get
			{
				return this._ID_admin;
			}
			set
			{
				if ((this._ID_admin != value))
				{
					if (this._Admin_data.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_adminChanging(value);
					this.SendPropertyChanging();
					this._ID_admin = value;
					this.SendPropertyChanged("ID_admin");
					this.OnID_adminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this.OnactivityChanging(value);
					this.SendPropertyChanging();
					this._activity = value;
					this.SendPropertyChanged("activity");
					this.OnactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_data_history", Storage="_Admin_data", ThisKey="ID_admin", OtherKey="ID_admin", IsForeignKey=true, DeleteRule="CASCADE")]
		public Admin_data Admin_data
		{
			get
			{
				return this._Admin_data.Entity;
			}
			set
			{
				Admin_data previousValue = this._Admin_data.Entity;
				if (((previousValue != value) 
							|| (this._Admin_data.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin_data.Entity = null;
						previousValue.histories.Remove(this);
					}
					this._Admin_data.Entity = value;
					if ((value != null))
					{
						value.histories.Add(this);
						this._ID_admin = value.ID_admin;
					}
					else
					{
						this._ID_admin = default(Nullable<int>);
					}
					this.SendPropertyChanged("Admin_data");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Information")]
	public partial class Information : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_card;
		
		private string _Name;
		
		private string _Fname;
		
		private int _dob;
		
		private string _Adr;
		
		private EntitySet<request> _requests;
		
		private EntitySet<user_status> _user_status;
		
		private EntitySet<vehicle_X_infor> _vehicle_X_infors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_cardChanging(string value);
    partial void OnID_cardChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFnameChanging(string value);
    partial void OnFnameChanged();
    partial void OndobChanging(int value);
    partial void OndobChanged();
    partial void OnAdrChanging(string value);
    partial void OnAdrChanged();
    #endregion
		
		public Information()
		{
			this._requests = new EntitySet<request>(new Action<request>(this.attach_requests), new Action<request>(this.detach_requests));
			this._user_status = new EntitySet<user_status>(new Action<user_status>(this.attach_user_status), new Action<user_status>(this.detach_user_status));
			this._vehicle_X_infors = new EntitySet<vehicle_X_infor>(new Action<vehicle_X_infor>(this.attach_vehicle_X_infors), new Action<vehicle_X_infor>(this.detach_vehicle_X_infors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this.OnID_cardChanging(value);
					this.SendPropertyChanging();
					this._ID_card = value;
					this.SendPropertyChanged("ID_card");
					this.OnID_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fname
		{
			get
			{
				return this._Fname;
			}
			set
			{
				if ((this._Fname != value))
				{
					this.OnFnameChanging(value);
					this.SendPropertyChanging();
					this._Fname = value;
					this.SendPropertyChanged("Fname");
					this.OnFnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Int NOT NULL")]
		public int dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adr", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Adr
		{
			get
			{
				return this._Adr;
			}
			set
			{
				if ((this._Adr != value))
				{
					this.OnAdrChanging(value);
					this.SendPropertyChanging();
					this._Adr = value;
					this.SendPropertyChanged("Adr");
					this.OnAdrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_request", Storage="_requests", ThisKey="ID_card", OtherKey="ID_card")]
		public EntitySet<request> requests
		{
			get
			{
				return this._requests;
			}
			set
			{
				this._requests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_user_status", Storage="_user_status", ThisKey="ID_card", OtherKey="ID_card")]
		public EntitySet<user_status> user_status
		{
			get
			{
				return this._user_status;
			}
			set
			{
				this._user_status.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_vehicle_X_infor", Storage="_vehicle_X_infors", ThisKey="ID_card", OtherKey="ID_card")]
		public EntitySet<vehicle_X_infor> vehicle_X_infors
		{
			get
			{
				return this._vehicle_X_infors;
			}
			set
			{
				this._vehicle_X_infors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_requests(request entity)
		{
			this.SendPropertyChanging();
			entity.Information = this;
		}
		
		private void detach_requests(request entity)
		{
			this.SendPropertyChanging();
			entity.Information = null;
		}
		
		private void attach_user_status(user_status entity)
		{
			this.SendPropertyChanging();
			entity.Information = this;
		}
		
		private void detach_user_status(user_status entity)
		{
			this.SendPropertyChanging();
			entity.Information = null;
		}
		
		private void attach_vehicle_X_infors(vehicle_X_infor entity)
		{
			this.SendPropertyChanging();
			entity.Information = this;
		}
		
		private void detach_vehicle_X_infors(vehicle_X_infor entity)
		{
			this.SendPropertyChanging();
			entity.Information = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.request")]
	public partial class request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ID_card;
		
		private string _conplain;
		
		private string _request1;
		
		private string _reply;
		
		private System.Nullable<System.DateTime> _time_;
		
		private EntityRef<Information> _Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnID_cardChanging(string value);
    partial void OnID_cardChanged();
    partial void OnconplainChanging(string value);
    partial void OnconplainChanged();
    partial void Onrequest1Changing(string value);
    partial void Onrequest1Changed();
    partial void OnreplyChanging(string value);
    partial void OnreplyChanged();
    partial void Ontime_Changing(System.Nullable<System.DateTime> value);
    partial void Ontime_Changed();
    #endregion
		
		public request()
		{
			this._Information = default(EntityRef<Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					if (this._Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_cardChanging(value);
					this.SendPropertyChanging();
					this._ID_card = value;
					this.SendPropertyChanged("ID_card");
					this.OnID_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conplain", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string conplain
		{
			get
			{
				return this._conplain;
			}
			set
			{
				if ((this._conplain != value))
				{
					this.OnconplainChanging(value);
					this.SendPropertyChanging();
					this._conplain = value;
					this.SendPropertyChanged("conplain");
					this.OnconplainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="request", Storage="_request1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string request1
		{
			get
			{
				return this._request1;
			}
			set
			{
				if ((this._request1 != value))
				{
					this.Onrequest1Changing(value);
					this.SendPropertyChanging();
					this._request1 = value;
					this.SendPropertyChanged("request1");
					this.Onrequest1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string reply
		{
			get
			{
				return this._reply;
			}
			set
			{
				if ((this._reply != value))
				{
					this.OnreplyChanging(value);
					this.SendPropertyChanging();
					this._reply = value;
					this.SendPropertyChanged("reply");
					this.OnreplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_
		{
			get
			{
				return this._time_;
			}
			set
			{
				if ((this._time_ != value))
				{
					this.Ontime_Changing(value);
					this.SendPropertyChanging();
					this._time_ = value;
					this.SendPropertyChanged("time_");
					this.Ontime_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_request", Storage="_Information", ThisKey="ID_card", OtherKey="ID_card", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Information Information
		{
			get
			{
				return this._Information.Entity;
			}
			set
			{
				Information previousValue = this._Information.Entity;
				if (((previousValue != value) 
							|| (this._Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Information.Entity = null;
						previousValue.requests.Remove(this);
					}
					this._Information.Entity = value;
					if ((value != null))
					{
						value.requests.Add(this);
						this._ID_card = value.ID_card;
					}
					else
					{
						this._ID_card = default(string);
					}
					this.SendPropertyChanged("Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.type_of_mistake")]
	public partial class type_of_mistake : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mistake_ID;
		
		private string _content;
		
		private string _descride;
		
		private decimal _charge;
		
		private EntitySet<vehicle_X_mistake> _vehicle_X_mistakes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmistake_IDChanging(int value);
    partial void Onmistake_IDChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OndescrideChanging(string value);
    partial void OndescrideChanged();
    partial void OnchargeChanging(decimal value);
    partial void OnchargeChanged();
    #endregion
		
		public type_of_mistake()
		{
			this._vehicle_X_mistakes = new EntitySet<vehicle_X_mistake>(new Action<vehicle_X_mistake>(this.attach_vehicle_X_mistakes), new Action<vehicle_X_mistake>(this.detach_vehicle_X_mistakes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mistake_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mistake_ID
		{
			get
			{
				return this._mistake_ID;
			}
			set
			{
				if ((this._mistake_ID != value))
				{
					this.Onmistake_IDChanging(value);
					this.SendPropertyChanging();
					this._mistake_ID = value;
					this.SendPropertyChanged("mistake_ID");
					this.Onmistake_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descride", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descride
		{
			get
			{
				return this._descride;
			}
			set
			{
				if ((this._descride != value))
				{
					this.OndescrideChanging(value);
					this.SendPropertyChanging();
					this._descride = value;
					this.SendPropertyChanged("descride");
					this.OndescrideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charge", DbType="Money NOT NULL")]
		public decimal charge
		{
			get
			{
				return this._charge;
			}
			set
			{
				if ((this._charge != value))
				{
					this.OnchargeChanging(value);
					this.SendPropertyChanging();
					this._charge = value;
					this.SendPropertyChanged("charge");
					this.OnchargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="type_of_mistake_vehicle_X_mistake", Storage="_vehicle_X_mistakes", ThisKey="mistake_ID", OtherKey="mistake_ID")]
		public EntitySet<vehicle_X_mistake> vehicle_X_mistakes
		{
			get
			{
				return this._vehicle_X_mistakes;
			}
			set
			{
				this._vehicle_X_mistakes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehicle_X_mistakes(vehicle_X_mistake entity)
		{
			this.SendPropertyChanging();
			entity.type_of_mistake = this;
		}
		
		private void detach_vehicle_X_mistakes(vehicle_X_mistake entity)
		{
			this.SendPropertyChanging();
			entity.type_of_mistake = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.user_status")]
	public partial class user_status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ID_card;
		
		private bool _status_;
		
		private string _use_name;
		
		private string _pass;
		
		private string _secret_answer;
		
		private EntityRef<Information> _Information;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnID_cardChanging(string value);
    partial void OnID_cardChanged();
    partial void Onstatus_Changing(bool value);
    partial void Onstatus_Changed();
    partial void Onuse_nameChanging(string value);
    partial void Onuse_nameChanged();
    partial void OnpassChanging(string value);
    partial void OnpassChanged();
    partial void Onsecret_answerChanging(string value);
    partial void Onsecret_answerChanged();
    #endregion
		
		public user_status()
		{
			this._Information = default(EntityRef<Information>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					if (this._Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_cardChanging(value);
					this.SendPropertyChanging();
					this._ID_card = value;
					this.SendPropertyChanged("ID_card");
					this.OnID_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit NOT NULL")]
		public bool status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this.Onstatus_Changing(value);
					this.SendPropertyChanging();
					this._status_ = value;
					this.SendPropertyChanged("status_");
					this.Onstatus_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_use_name", DbType="VarChar(100)")]
		public string use_name
		{
			get
			{
				return this._use_name;
			}
			set
			{
				if ((this._use_name != value))
				{
					this.Onuse_nameChanging(value);
					this.SendPropertyChanging();
					this._use_name = value;
					this.SendPropertyChanged("use_name");
					this.Onuse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="Char(32)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this.OnpassChanging(value);
					this.SendPropertyChanging();
					this._pass = value;
					this.SendPropertyChanged("pass");
					this.OnpassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this.Onsecret_answerChanging(value);
					this.SendPropertyChanging();
					this._secret_answer = value;
					this.SendPropertyChanged("secret_answer");
					this.Onsecret_answerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_user_status", Storage="_Information", ThisKey="ID_card", OtherKey="ID_card", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Information Information
		{
			get
			{
				return this._Information.Entity;
			}
			set
			{
				Information previousValue = this._Information.Entity;
				if (((previousValue != value) 
							|| (this._Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Information.Entity = null;
						previousValue.user_status.Remove(this);
					}
					this._Information.Entity = value;
					if ((value != null))
					{
						value.user_status.Add(this);
						this._ID_card = value.ID_card;
					}
					else
					{
						this._ID_card = default(string);
					}
					this.SendPropertyChanged("Information");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicle")]
	public partial class vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _vehicle_ID;
		
		private string _frame_Number;
		
		private string _machine_number;
		
		private string _brand;
		
		private string _origin;
		
		private EntitySet<vehicle_X_mistake> _vehicle_X_mistakes;
		
		private EntitySet<vehicle_X_infor> _vehicle_X_infors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onvehicle_IDChanging(string value);
    partial void Onvehicle_IDChanged();
    partial void Onframe_NumberChanging(string value);
    partial void Onframe_NumberChanged();
    partial void Onmachine_numberChanging(string value);
    partial void Onmachine_numberChanged();
    partial void OnbrandChanging(string value);
    partial void OnbrandChanged();
    partial void OnoriginChanging(string value);
    partial void OnoriginChanged();
    #endregion
		
		public vehicle()
		{
			this._vehicle_X_mistakes = new EntitySet<vehicle_X_mistake>(new Action<vehicle_X_mistake>(this.attach_vehicle_X_mistakes), new Action<vehicle_X_mistake>(this.detach_vehicle_X_mistakes));
			this._vehicle_X_infors = new EntitySet<vehicle_X_infor>(new Action<vehicle_X_infor>(this.attach_vehicle_X_infors), new Action<vehicle_X_infor>(this.detach_vehicle_X_infors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this.Onvehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._vehicle_ID = value;
					this.SendPropertyChanged("vehicle_ID");
					this.Onvehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frame_Number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string frame_Number
		{
			get
			{
				return this._frame_Number;
			}
			set
			{
				if ((this._frame_Number != value))
				{
					this.Onframe_NumberChanging(value);
					this.SendPropertyChanging();
					this._frame_Number = value;
					this.SendPropertyChanged("frame_Number");
					this.Onframe_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string machine_number
		{
			get
			{
				return this._machine_number;
			}
			set
			{
				if ((this._machine_number != value))
				{
					this.Onmachine_numberChanging(value);
					this.SendPropertyChanging();
					this._machine_number = value;
					this.SendPropertyChanged("machine_number");
					this.Onmachine_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string brand
		{
			get
			{
				return this._brand;
			}
			set
			{
				if ((this._brand != value))
				{
					this.OnbrandChanging(value);
					this.SendPropertyChanging();
					this._brand = value;
					this.SendPropertyChanged("brand");
					this.OnbrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string origin
		{
			get
			{
				return this._origin;
			}
			set
			{
				if ((this._origin != value))
				{
					this.OnoriginChanging(value);
					this.SendPropertyChanging();
					this._origin = value;
					this.SendPropertyChanged("origin");
					this.OnoriginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_vehicle_X_mistake", Storage="_vehicle_X_mistakes", ThisKey="vehicle_ID", OtherKey="vehicle_ID")]
		public EntitySet<vehicle_X_mistake> vehicle_X_mistakes
		{
			get
			{
				return this._vehicle_X_mistakes;
			}
			set
			{
				this._vehicle_X_mistakes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_vehicle_X_infor", Storage="_vehicle_X_infors", ThisKey="vehicle_ID", OtherKey="vehicle_ID")]
		public EntitySet<vehicle_X_infor> vehicle_X_infors
		{
			get
			{
				return this._vehicle_X_infors;
			}
			set
			{
				this._vehicle_X_infors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_vehicle_X_mistakes(vehicle_X_mistake entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = this;
		}
		
		private void detach_vehicle_X_mistakes(vehicle_X_mistake entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = null;
		}
		
		private void attach_vehicle_X_infors(vehicle_X_infor entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = this;
		}
		
		private void detach_vehicle_X_infors(vehicle_X_infor entity)
		{
			this.SendPropertyChanging();
			entity.vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vehicle_X_infor")]
	public partial class vehicle_X_infor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _vehicle_ID;
		
		private string _ID_card;
		
		private EntityRef<Information> _Information;
		
		private EntityRef<vehicle> _vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onvehicle_IDChanging(string value);
    partial void Onvehicle_IDChanged();
    partial void OnID_cardChanging(string value);
    partial void OnID_cardChanged();
    #endregion
		
		public vehicle_X_infor()
		{
			this._Information = default(EntityRef<Information>);
			this._vehicle = default(EntityRef<vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					if (this._vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._vehicle_ID = value;
					this.SendPropertyChanged("vehicle_ID");
					this.Onvehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					if (this._Information.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_cardChanging(value);
					this.SendPropertyChanging();
					this._ID_card = value;
					this.SendPropertyChanged("ID_card");
					this.OnID_cardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Information_vehicle_X_infor", Storage="_Information", ThisKey="ID_card", OtherKey="ID_card", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Information Information
		{
			get
			{
				return this._Information.Entity;
			}
			set
			{
				Information previousValue = this._Information.Entity;
				if (((previousValue != value) 
							|| (this._Information.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Information.Entity = null;
						previousValue.vehicle_X_infors.Remove(this);
					}
					this._Information.Entity = value;
					if ((value != null))
					{
						value.vehicle_X_infors.Add(this);
						this._ID_card = value.ID_card;
					}
					else
					{
						this._ID_card = default(string);
					}
					this.SendPropertyChanged("Information");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="vehicle_vehicle_X_infor", Storage="_vehicle", ThisKey="vehicle_ID", OtherKey="vehicle_ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public vehicle vehicle
		{
			get
			{
				return this._vehicle.Entity;
			}
			set
			{
				vehicle previousValue = this._vehicle.Entity;
				if (((previousValue != value) 
							|| (this._vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._vehicle.Entity = null;
						previousValue.vehicle_X_infors.Remove(this);
					}
					this._vehicle.Entity = value;
					if ((value != null))
					{
						value.vehicle_X_infors.Add(this);
						this._vehicle_ID = value.vehicle_ID;
					}
					else
					{
						this._vehicle_ID = default(string);
					}
					this.SendPropertyChanged("vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class USP_AdminTableResult
	{
		
		private int _ID_admin;
		
		private string _use_name;
		
		private string _pass;
		
		public USP_AdminTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_admin", DbType="Int NOT NULL")]
		public int ID_admin
		{
			get
			{
				return this._ID_admin;
			}
			set
			{
				if ((this._ID_admin != value))
				{
					this._ID_admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_use_name", DbType="VarChar(100)")]
		public string use_name
		{
			get
			{
				return this._use_name;
			}
			set
			{
				if ((this._use_name != value))
				{
					this._use_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="Char(32)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this._pass = value;
				}
			}
		}
	}
	
	public partial class USP_vehicleTableResult
	{
		
		private string _vehicle_ID;
		
		private string _frame_Number;
		
		private string _machine_number;
		
		private string _brand;
		
		private string _origin;
		
		public USP_vehicleTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this._vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frame_Number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string frame_Number
		{
			get
			{
				return this._frame_Number;
			}
			set
			{
				if ((this._frame_Number != value))
				{
					this._frame_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string machine_number
		{
			get
			{
				return this._machine_number;
			}
			set
			{
				if ((this._machine_number != value))
				{
					this._machine_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string brand
		{
			get
			{
				return this._brand;
			}
			set
			{
				if ((this._brand != value))
				{
					this._brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string origin
		{
			get
			{
				return this._origin;
			}
			set
			{
				if ((this._origin != value))
				{
					this._origin = value;
				}
			}
		}
	}
	
	public partial class USP_getAdminResult
	{
		
		private int _ID_admin;
		
		private string _use_name;
		
		private string _pass;
		
		public USP_getAdminResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_admin", DbType="Int NOT NULL")]
		public int ID_admin
		{
			get
			{
				return this._ID_admin;
			}
			set
			{
				if ((this._ID_admin != value))
				{
					this._ID_admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_use_name", DbType="VarChar(100)")]
		public string use_name
		{
			get
			{
				return this._use_name;
			}
			set
			{
				if ((this._use_name != value))
				{
					this._use_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="Char(32)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this._pass = value;
				}
			}
		}
	}
	
	public partial class USP_getHistoryResult
	{
		
		private int _id;
		
		private System.Nullable<int> _ID_admin;
		
		private string _activity;
		
		public USP_getHistoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_admin", DbType="Int")]
		public System.Nullable<int> ID_admin
		{
			get
			{
				return this._ID_admin;
			}
			set
			{
				if ((this._ID_admin != value))
				{
					this._ID_admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this._activity = value;
				}
			}
		}
	}
	
	public partial class USP_getInformationResult
	{
		
		private string _ID_Card;
		
		private string _FName;
		
		private string _Name;
		
		private int _dob;
		
		private string _Adr;
		
		public USP_getInformationResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_Card
		{
			get
			{
				return this._ID_Card;
			}
			set
			{
				if ((this._ID_Card != value))
				{
					this._ID_Card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this._FName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Int NOT NULL")]
		public int dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this._dob = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adr", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Adr
		{
			get
			{
				return this._Adr;
			}
			set
			{
				if ((this._Adr != value))
				{
					this._Adr = value;
				}
			}
		}
	}
	
	public partial class USP_getMistakeSTTResult
	{
		
		private System.Nullable<bool> _status_;
		
		public USP_getMistakeSTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit")]
		public System.Nullable<bool> status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this._status_ = value;
				}
			}
		}
	}
	
	public partial class USP_getRequestResult
	{
		
		private int _id;
		
		private string _ID_card;
		
		private string _conplain;
		
		private string _request;
		
		private System.Nullable<System.DateTime> _time_;
		
		private string _reply;
		
		public USP_getRequestResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conplain", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string conplain
		{
			get
			{
				return this._conplain;
			}
			set
			{
				if ((this._conplain != value))
				{
					this._conplain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string request
		{
			get
			{
				return this._request;
			}
			set
			{
				if ((this._request != value))
				{
					this._request = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_
		{
			get
			{
				return this._time_;
			}
			set
			{
				if ((this._time_ != value))
				{
					this._time_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string reply
		{
			get
			{
				return this._reply;
			}
			set
			{
				if ((this._reply != value))
				{
					this._reply = value;
				}
			}
		}
	}
	
	public partial class USP_GetSecretAnswerResult
	{
		
		private string _secret_answer;
		
		public USP_GetSecretAnswerResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
	}
	
	public partial class USP_getToMResult
	{
		
		private int _mistake_ID;
		
		private string _content;
		
		private string _descride;
		
		private decimal _charge;
		
		public USP_getToMResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mistake_ID", DbType="Int NOT NULL")]
		public int mistake_ID
		{
			get
			{
				return this._mistake_ID;
			}
			set
			{
				if ((this._mistake_ID != value))
				{
					this._mistake_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this._content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descride", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descride
		{
			get
			{
				return this._descride;
			}
			set
			{
				if ((this._descride != value))
				{
					this._descride = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charge", DbType="Money NOT NULL")]
		public decimal charge
		{
			get
			{
				return this._charge;
			}
			set
			{
				if ((this._charge != value))
				{
					this._charge = value;
				}
			}
		}
	}
	
	public partial class USP_getUserSTTResult
	{
		
		private int _id;
		
		private string _ID_card;
		
		private bool _status_;
		
		private string _use_name;
		
		private string _pass;
		
		private string _secret_answer;
		
		public USP_getUserSTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit NOT NULL")]
		public bool status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this._status_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_use_name", DbType="VarChar(100)")]
		public string use_name
		{
			get
			{
				return this._use_name;
			}
			set
			{
				if ((this._use_name != value))
				{
					this._use_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="Char(32)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this._pass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
	}
	
	public partial class USP_getvehicleResult
	{
		
		private string _vehicle_ID;
		
		private string _frame_Number;
		
		private string _machine_number;
		
		private string _brand;
		
		private string _origin;
		
		public USP_getvehicleResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this._vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frame_Number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string frame_Number
		{
			get
			{
				return this._frame_Number;
			}
			set
			{
				if ((this._frame_Number != value))
				{
					this._frame_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_machine_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string machine_number
		{
			get
			{
				return this._machine_number;
			}
			set
			{
				if ((this._machine_number != value))
				{
					this._machine_number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string brand
		{
			get
			{
				return this._brand;
			}
			set
			{
				if ((this._brand != value))
				{
					this._brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_origin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string origin
		{
			get
			{
				return this._origin;
			}
			set
			{
				if ((this._origin != value))
				{
					this._origin = value;
				}
			}
		}
	}
	
	public partial class USP_getVehicleinforResult
	{
		
		private string _vehicle_ID;
		
		private string _ID_card;
		
		public USP_getVehicleinforResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this._vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
	}
	
	public partial class USP_getVehicleMistakeResult
	{
		
		private int _id;
		
		private string _vehicle_ID;
		
		private int _mistake_ID;
		
		private string _descride_mistake;
		
		private System.Nullable<bool> _status_;
		
		private System.Nullable<System.DateTime> _time_;
		
		public USP_getVehicleMistakeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this._vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mistake_ID", DbType="Int NOT NULL")]
		public int mistake_ID
		{
			get
			{
				return this._mistake_ID;
			}
			set
			{
				if ((this._mistake_ID != value))
				{
					this._mistake_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descride_mistake", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descride_mistake
		{
			get
			{
				return this._descride_mistake;
			}
			set
			{
				if ((this._descride_mistake != value))
				{
					this._descride_mistake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit")]
		public System.Nullable<bool> status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this._status_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_", DbType="Date")]
		public System.Nullable<System.DateTime> time_
		{
			get
			{
				return this._time_;
			}
			set
			{
				if ((this._time_ != value))
				{
					this._time_ = value;
				}
			}
		}
	}
	
	public partial class USP_HistoryTableResult
	{
		
		private int _id;
		
		private System.Nullable<int> _ID_admin;
		
		private string _activity;
		
		public USP_HistoryTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_admin", DbType="Int")]
		public System.Nullable<int> ID_admin
		{
			get
			{
				return this._ID_admin;
			}
			set
			{
				if ((this._ID_admin != value))
				{
					this._ID_admin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this._activity = value;
				}
			}
		}
	}
	
	public partial class USP_InformationTableResult
	{
		
		private string _ID_card;
		
		private string _Name;
		
		private string _Fname;
		
		private int _dob;
		
		private string _Adr;
		
		public USP_InformationTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fname
		{
			get
			{
				return this._Fname;
			}
			set
			{
				if ((this._Fname != value))
				{
					this._Fname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="Int NOT NULL")]
		public int dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this._dob = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adr", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Adr
		{
			get
			{
				return this._Adr;
			}
			set
			{
				if ((this._Adr != value))
				{
					this._Adr = value;
				}
			}
		}
	}
	
	public partial class USP_RequestTableResult
	{
		
		private int _id;
		
		private string _ID_card;
		
		private string _conplain;
		
		private string _request;
		
		private string _reply;
		
		private System.Nullable<System.DateTime> _time_;
		
		public USP_RequestTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_conplain", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string conplain
		{
			get
			{
				return this._conplain;
			}
			set
			{
				if ((this._conplain != value))
				{
					this._conplain = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string request
		{
			get
			{
				return this._request;
			}
			set
			{
				if ((this._request != value))
				{
					this._request = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reply", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string reply
		{
			get
			{
				return this._reply;
			}
			set
			{
				if ((this._reply != value))
				{
					this._reply = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_
		{
			get
			{
				return this._time_;
			}
			set
			{
				if ((this._time_ != value))
				{
					this._time_ = value;
				}
			}
		}
	}
	
	public partial class USP_ToMTableResult
	{
		
		private int _mistake_ID;
		
		private string _content;
		
		private string _descride;
		
		private decimal _charge;
		
		public USP_ToMTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mistake_ID", DbType="Int NOT NULL")]
		public int mistake_ID
		{
			get
			{
				return this._mistake_ID;
			}
			set
			{
				if ((this._mistake_ID != value))
				{
					this._mistake_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this._content = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descride", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descride
		{
			get
			{
				return this._descride;
			}
			set
			{
				if ((this._descride != value))
				{
					this._descride = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_charge", DbType="Money NOT NULL")]
		public decimal charge
		{
			get
			{
				return this._charge;
			}
			set
			{
				if ((this._charge != value))
				{
					this._charge = value;
				}
			}
		}
	}
	
	public partial class USP_UserSTTResult
	{
		
		private int _id;
		
		private string _ID_card;
		
		private bool _status_;
		
		private string _use_name;
		
		private string _pass;
		
		private string _secret_answer;
		
		public USP_UserSTTResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit NOT NULL")]
		public bool status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this._status_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_use_name", DbType="VarChar(100)")]
		public string use_name
		{
			get
			{
				return this._use_name;
			}
			set
			{
				if ((this._use_name != value))
				{
					this._use_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pass", DbType="Char(32)")]
		public string pass
		{
			get
			{
				return this._pass;
			}
			set
			{
				if ((this._pass != value))
				{
					this._pass = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secret_answer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string secret_answer
		{
			get
			{
				return this._secret_answer;
			}
			set
			{
				if ((this._secret_answer != value))
				{
					this._secret_answer = value;
				}
			}
		}
	}
	
	public partial class USP_VehicleInforTableResult
	{
		
		private int _id;
		
		private string _vehicle_ID;
		
		private string _ID_card;
		
		public USP_VehicleInforTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this._vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_card", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ID_card
		{
			get
			{
				return this._ID_card;
			}
			set
			{
				if ((this._ID_card != value))
				{
					this._ID_card = value;
				}
			}
		}
	}
	
	public partial class USP_VehicleMistakeTableResult
	{
		
		private int _id;
		
		private string _vehicle_ID;
		
		private int _mistake_ID;
		
		private string _descride_mistake;
		
		private System.Nullable<bool> _status_;
		
		private System.Nullable<System.DateTime> _time_;
		
		public USP_VehicleMistakeTableResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string vehicle_ID
		{
			get
			{
				return this._vehicle_ID;
			}
			set
			{
				if ((this._vehicle_ID != value))
				{
					this._vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mistake_ID", DbType="Int NOT NULL")]
		public int mistake_ID
		{
			get
			{
				return this._mistake_ID;
			}
			set
			{
				if ((this._mistake_ID != value))
				{
					this._mistake_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descride_mistake", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string descride_mistake
		{
			get
			{
				return this._descride_mistake;
			}
			set
			{
				if ((this._descride_mistake != value))
				{
					this._descride_mistake = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_", DbType="Bit")]
		public System.Nullable<bool> status_
		{
			get
			{
				return this._status_;
			}
			set
			{
				if ((this._status_ != value))
				{
					this._status_ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_", DbType="Date")]
		public System.Nullable<System.DateTime> time_
		{
			get
			{
				return this._time_;
			}
			set
			{
				if ((this._time_ != value))
				{
					this._time_ = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
